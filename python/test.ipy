#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri May 21 13:57:24 2021

@author: kutalmisince
"""

import os

result_directory = './results'

algorithms = ['dfm', 'superpoint', 'superglue', 'patch2pix', 'ransacflow', 'd2net']

alg_directory = {'dfm': '/Users/kutalmisince/Developer/DFM/python',
                 'superpoint': '/Users/kutalmisince/Developer/DFM'}

datasets = ['multimodal', 'hpatches']

dataset_directory = {'multimodal': '/multimodal_path', 'hpatches' : '/hpatches_path'}

# RUN ALGORITHMS and SAVE OUTPUTS
for i, alg in enumerate(algorithms):
    
    os.chdir(alg_directory[alg])

    !python3 create_virtual_env.py -name alg
    
    #os.listdir()
    #!conda activate alg
    
    for dataset in datasets:
        
        out_dir = result_directory + '/' + dataset + '/' + alg
        
        if not os.path.exists(out_dir):
            os.makedirs(out_dir)
            
        !python3 algorithm_wrapper.py -inp_dir dataset_directory[dataset] -out_dir out_dir
        
    #!conda deactivate
    
# PERFORMANCE MEASUREMENT
for i, alg in enumerate(algorithms):
        
    for dataset in datasets:
        
        out_dir = result_directory '/' + dataset + '/' + alg
        
        mma, four_corners, four_corners_cummulative = evaluate(out_dir)
        
        # save as csv with pandas
        # include runtime, number of pairs, and 3 above


def evaluate(data_dir):
    
    mma = list(range(10))
    four_corners = list(range(10))
    four_corners_cummulative = list(range(10))
    
    for pair in pairs:
        evaluate_pair(points_A, points_B)
        
    
    return mma, four_corners, four_corners_cummulative 


def evaluate_pair(points_A, points_B):
    
    return mma, four_corners, four_corners_cummulative